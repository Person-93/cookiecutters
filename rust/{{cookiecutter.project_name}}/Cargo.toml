[package]
name = "{{ cookiecutter.project_name }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
version = "0.0.0"
edition = "2024"
description = "{{ cookiecutter.description }}"
license = "MIT OR Apache-2.0"
publish = false

[dependencies]

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
as_conversions = "warn"
assertions_on_result_states = "deny"
assigning_clones = "warn"
bool_to_int_with_if = "warn"
borrow_as_pointer = "deny"
# this lint is still in nursery as of 2025-09-18
branches_sharing_code = "warn"
cfg_not_test = "deny"
checked_conversions = "deny"
# this lint is still in nursery as of 2025-09-18
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
# this lint is still in nursery as of 2025-09-18
corece_container_to_any = "deny"
# this lint is still in nursery as of 2025-09-18
collection_is_never_read = "warn"
comparison_chain = "warn"
copy_iterator = "deny"
create_dir = "warn"
dbg_macro = "warn"
# this lint is still in nursery as of 2025-09-18
debug_assert_with_mut_call = "deny"
default_union_representation = "deny"
# this lint is still in nursery as of 2025-09-18
derive_partial_eq_without_eq = "warn"
doc_broken_link = "deny"
doc_comment_double_space_linebreaks = "warn"
doc_link_with_quotes = "warn"
elidable_lifetime_names = "warn"
empty_drop_implementation = "deny"
empty_enum_variants_with_brackets = "deny"
empty_structs_with_brackets = "deny"
enum_glob_use = "warn"
# this lint is still in nursery as of 2025-09-18
equatable_if_let = "warn"
error_impl_error = "deny"
exhaustive_enums = "warn"
exhaustive_structs = "warn"
exit = "warn"
expl_impl_clone_on_copy = "deny"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
# this lint is still in nursery as of 2025-09-18
fallible_impl_from = "forbid"
filetype_is_file = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "forbid"
format_collect = "forbid"
format_push_string = "warn"
from_iter_instead_of_collect = "warn"
future_not_send = "warn"
## should use `collection.get().unwrap_or_else(|| todo!())`
get_unwrap = "warn"
if_then_some_else_none = "warn"
ignore_without_reason = "warn"
ignored_unit_patterns = "warn"
implicit_clone = "warn"
implicit_hasher = "deny"
# this lint is still in nursery as of 2025-09-18
imprecise_flops = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
infinite_loop = "warn"
integer_division = "warn"
into_iter_without_iter = "warn"
invalid_upcast_comparisons = "warn"
ip_constant = "deny"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_not_returning_iterator = "warn"
# this lint is still in nursery as of 2025-09-18
iter_on_empty_collections = "warn"
# this lint is still in nursery as of 2025-09-18
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_digit_groups = "warn"
large_include_file = "warn"
large_types_passed_by_value = "warn"
linkedlist = "warn"
# this lint is still in nursery as of 2025-09-18
literal_strings_with_formatting_args = "warn"
lossy_float_literal = "deny"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_is_power_of_two = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_midpoint = "warn"
manual_string_new = "warn"
many_single_char_names = "warn"
map_err_ignore = "warn"
map_unwrap_or = "warn"
map_with_unused_argument_over_ranges = "warn"
match_bool = "warn"
match_same_arms = "warn"
maybe_infinite_iter = "warn"
mem_forget = "warn"
min_ident_chars = "warn"
mismatching_type_param_order = "warn"
missing_assert_message = "warn"
missing_fields_in_debug = "warn"
mixed_read_write_in_expression = "warn"
module_name_repetitions = "warn"
mut_mut = "deny"
mutex_atomic = "warn"
mutex_integer = "warn"
modulo_arithmetic = "warn"
needless_bitwise_bool = "warn"
# this lint is still in nursery as of 2025-09-18
needless_collect = "warn"
# this lint is still in nursery as of 2025-09-18
needless_continue = "warn"
# this lint is still in nursery as of 2025-09-18
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
needless_raw_string_hashes = "warn"
negative_features_names = "warn"
no_effect_underscore_binding = "warn"
no_mangle_with_rust_abi = "warn"
non_ascii_idents = "forbid"
non_std_lazy_statics = "warn"
non_zero_suggestions = "warn"
# this lint is still in nursery as of 2025-09-18
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
# this lint is still in nursery as of 2025-09-18
option_if_let_else = "warn"
option_option = "warn"
# this lint is still in nursery as of 2025-09-18
or_fun_call = "warn"
# this lint is still in nursery as of 2025-09-18
path_buf_push_overwrite = "deny"
precedence_bits = "warn"
ptr_cast_constness = "warn"
pub_underscore_fields = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
# this lint is still in nursery as of 2025-09-18
read_zero_byte_vec = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
# set to deny instead of warn because changing the name of the feature
# later means you have to change every instance of `#[cfg(feature = "...")]`
redundant_feature_names = "deny"
redundant_test_prefix = "warn"
ref_as_ptr = "warn"
ref_binding_to_reference = "warn"
ref_option = "warn"
ref_option_ref = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
semicolon_if_nothing_returned = "warn"
# this lint is still in nursery as of 2025-09-18
set_contains_or_insert = "warn"
# this lint is still in nursery as of 2025-09-18
significant_drop_in_scrutinee = "warn"
should_panic_without_expect = "warn"
# this lint is still in nursery as of 2025-09-18
significant_drop_tightening = "warn"
similar_names = "warn"
single_char_pattern = "warn"
str_split_at_newline = "deny"
str_to_string = "warn"
# this lint is still in nursery as of 2025-09-18
string_lit_as_bytes = "warn"
struct_excessive_bools = "warn"
struct_field_names = "warn"
# this lint is still in nursery as of 2025-09-18
suboptimal_flops = "warn"
suspicious_xor_used_as_pow = "warn"
# this lint is still in nursery as of 2025-09-18
too_long_first_doc_paragraph = "warn"
too_many_lines = "warn"
# this lint is still in nursery as of 2025-09-18
trailing_empty_array = "warn"
# this lint is still in nursery as of 2025-09-18
trait_duplication_in_bounds = "warn"
transmute_ptr_to_ptr = "deny"
# this lint is still in nursery as of 2025-09-18
trivial_regex = "warn"
trivially_copy_pass_by_ref = "warn"
try_err = "warn"
# this lint is still in nursery as of 2025-09-18
type_repetition_in_bounds = "warn"
undocumented_unsafe_blocks = "warn"
unicode_not_nfc = "warn"
# this lint is still in nursery as of 2025-09-18
uninhabited_references = "deny"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_debug_formatting = "warn"
unnecessary_join = "warn"
unnecessary_literal_bound = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_semicolon = "warn"
# this lint is still in nursery as of 2025-09-18
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unneeded_field_pattern = "warn"
unnested_or_patterns = "warn"
unreadable_literal = "warn"
unsafe_derive_deserialize = "warn"
unused_async = "warn"
# this lint is still in nursery as of 2025-09-18
unused_peekable = "warn"
unused_result_ok = "warn"
# this lint is still in nursery as of 2025-09-18
unused_rounding = "warn"
unused_self = "warn"
unused_trait_names = "warn"
unused_unsafe = "warn"
unwrap_in_result = "warn"
unwrap_used = "warn"
use_self = "warn"
used_underscore_binding = "warn"
used_underscore_items = "warn"
# this lint is still in nursery as of 2025-09-18
useless_let_if_seq = "warn"
verbose_bit_mask = "warn"
verbose_file_reads = "warn"
# this lint is still in nursery as of 2025-09-18
while_float = "warn"
wildcard_dependencies = "deny"
wildcard_imports = "warn"
zero_sized_map_values = "warn"
